{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[],"Cache":[{"_id":"source/_posts/notes2.md","hash":"601ae497fea238a52b3a8d46c9ea79c82a4a0bba","modified":1494951014000},{"_id":"public/2017/05/16/notes2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494951022686},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494951022686},{"_id":"public/archives/2017/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494951022687},{"_id":"public/archives/2017/05/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494951022687},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1494951022687}],"Category":[],"Data":[],"Page":[],"Post":[{"layout":"post","title":"notes2","date":"2017-05-16T16:09:33.000Z","_content":"\nprogramming notes of the past weeks :  \n\ncopy and paste pwd form command line:  \npwd | pbcopy --> to copy current dirctory to clipboard\nthen cd $(pbpaste) --> to cd in different terminal\n\n## Copying when sshed in\ncommandThatMakesOutput | ssh desktop pbcopy\n\nSource: http://stackoverflow.com/questions/1152362/getting-items-on-the-local-clipboard-from-a-remote-ssh-session\n\n## scroll up in terminal:  \nshit + fn upkey (page up)\n\n## iTerm2 command overlord\ncommand + shift + i = send commmand to all terminal windows\n\n## Webstorm\ncommand 1 = project view\ncommand 2 = favorites\ncommand 3 = search thingy\nesc \t  = return to editor\n\n## Mongo - 'the mongo shell speaks js'\ndb.quotes.find({'drivers.lName':'King'}, {'policy.clutchQuoteType':1})\n\nJSON.stringify\n\ndecodeURIComponent(query that returns stringified stuff)\n\n## `npm test`\nexit status 0 is added to the end of npm test calls\n\nUse `; exit 0` to replicate this for other npm scripts.\n\nsource of info and link to code source: http://stackoverflow.com/questions/23286017/npm-error-elifecycle-while-running-the-test\n\n## `grep` files with regex \n\ngrep -c -F /\\**\ngrep  ^\\ *function\n\ngrep options\n-c count\n-F fixed string\n\ncontrol-R to search command history!!\n\n## Broken Fetch?\ngit config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"\n\n## Running in background\nnode server.js >std.txt  2>err.txt &\n\nsrc: https://kb.iu.edu/d/afnz\n\n## Timestamp in name\n$(date +%s)\n\n## What does /etc stand for?\nhttp://www.aboutlinux.info/2007/03/what-does-etc-stands-for-in-linuxunix.html\n\n## JSON Pretty print curl response:\njson_pp\n\n## PM2\npm2 start trafficcontroller.json --only s2","source":"_posts/notes2.md","raw":"---\nlayout: post\ntitle: notes2\ndate: 2017-05-16 11:09:33\ntags:\n---\n\nprogramming notes of the past weeks :  \n\ncopy and paste pwd form command line:  \npwd | pbcopy --> to copy current dirctory to clipboard\nthen cd $(pbpaste) --> to cd in different terminal\n\n## Copying when sshed in\ncommandThatMakesOutput | ssh desktop pbcopy\n\nSource: http://stackoverflow.com/questions/1152362/getting-items-on-the-local-clipboard-from-a-remote-ssh-session\n\n## scroll up in terminal:  \nshit + fn upkey (page up)\n\n## iTerm2 command overlord\ncommand + shift + i = send commmand to all terminal windows\n\n## Webstorm\ncommand 1 = project view\ncommand 2 = favorites\ncommand 3 = search thingy\nesc \t  = return to editor\n\n## Mongo - 'the mongo shell speaks js'\ndb.quotes.find({'drivers.lName':'King'}, {'policy.clutchQuoteType':1})\n\nJSON.stringify\n\ndecodeURIComponent(query that returns stringified stuff)\n\n## `npm test`\nexit status 0 is added to the end of npm test calls\n\nUse `; exit 0` to replicate this for other npm scripts.\n\nsource of info and link to code source: http://stackoverflow.com/questions/23286017/npm-error-elifecycle-while-running-the-test\n\n## `grep` files with regex \n\ngrep -c -F /\\**\ngrep  ^\\ *function\n\ngrep options\n-c count\n-F fixed string\n\ncontrol-R to search command history!!\n\n## Broken Fetch?\ngit config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"\n\n## Running in background\nnode server.js >std.txt  2>err.txt &\n\nsrc: https://kb.iu.edu/d/afnz\n\n## Timestamp in name\n$(date +%s)\n\n## What does /etc stand for?\nhttp://www.aboutlinux.info/2007/03/what-does-etc-stands-for-in-linuxunix.html\n\n## JSON Pretty print curl response:\njson_pp\n\n## PM2\npm2 start trafficcontroller.json --only s2","slug":"notes2","published":1,"updated":"2017-05-16T16:10:14.000Z","comments":1,"photos":[],"link":"","_id":"cj2rr8nij00000855evrhks46","content":"<p>programming notes of the past weeks :  </p>\n<p>copy and paste pwd form command line:<br>pwd | pbcopy –&gt; to copy current dirctory to clipboard<br>then cd $(pbpaste) –&gt; to cd in different terminal</p>\n<h2 id=\"Copying-when-sshed-in\"><a href=\"#Copying-when-sshed-in\" class=\"headerlink\" title=\"Copying when sshed in\"></a>Copying when sshed in</h2><p>commandThatMakesOutput | ssh desktop pbcopy</p>\n<p>Source: <a href=\"http://stackoverflow.com/questions/1152362/getting-items-on-the-local-clipboard-from-a-remote-ssh-session\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/1152362/getting-items-on-the-local-clipboard-from-a-remote-ssh-session</a></p>\n<h2 id=\"scroll-up-in-terminal\"><a href=\"#scroll-up-in-terminal\" class=\"headerlink\" title=\"scroll up in terminal:\"></a>scroll up in terminal:</h2><p>shit + fn upkey (page up)</p>\n<h2 id=\"iTerm2-command-overlord\"><a href=\"#iTerm2-command-overlord\" class=\"headerlink\" title=\"iTerm2 command overlord\"></a>iTerm2 command overlord</h2><p>command + shift + i = send commmand to all terminal windows</p>\n<h2 id=\"Webstorm\"><a href=\"#Webstorm\" class=\"headerlink\" title=\"Webstorm\"></a>Webstorm</h2><p>command 1 = project view<br>command 2 = favorites<br>command 3 = search thingy<br>esc       = return to editor</p>\n<h2 id=\"Mongo-‘the-mongo-shell-speaks-js’\"><a href=\"#Mongo-‘the-mongo-shell-speaks-js’\" class=\"headerlink\" title=\"Mongo - ‘the mongo shell speaks js’\"></a>Mongo - ‘the mongo shell speaks js’</h2><p>db.quotes.find({‘drivers.lName’:’King’}, {‘policy.clutchQuoteType’:1})</p>\n<p>JSON.stringify</p>\n<p>decodeURIComponent(query that returns stringified stuff)</p>\n<h2 id=\"npm-test\"><a href=\"#npm-test\" class=\"headerlink\" title=\"npm test\"></a><code>npm test</code></h2><p>exit status 0 is added to the end of npm test calls</p>\n<p>Use <code>; exit 0</code> to replicate this for other npm scripts.</p>\n<p>source of info and link to code source: <a href=\"http://stackoverflow.com/questions/23286017/npm-error-elifecycle-while-running-the-test\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/23286017/npm-error-elifecycle-while-running-the-test</a></p>\n<h2 id=\"grep-files-with-regex\"><a href=\"#grep-files-with-regex\" class=\"headerlink\" title=\"grep files with regex\"></a><code>grep</code> files with regex</h2><p>grep -c -F /*<em><br>grep  ^\\ </em>function</p>\n<p>grep options<br>-c count<br>-F fixed string</p>\n<p>control-R to search command history!!</p>\n<h2 id=\"Broken-Fetch\"><a href=\"#Broken-Fetch\" class=\"headerlink\" title=\"Broken Fetch?\"></a>Broken Fetch?</h2><p>git config remote.origin.fetch “+refs/heads/<em>:refs/remotes/origin/</em>“</p>\n<h2 id=\"Running-in-background\"><a href=\"#Running-in-background\" class=\"headerlink\" title=\"Running in background\"></a>Running in background</h2><p>node server.js &gt;std.txt  2&gt;err.txt &amp;</p>\n<p>src: <a href=\"https://kb.iu.edu/d/afnz\" target=\"_blank\" rel=\"external\">https://kb.iu.edu/d/afnz</a></p>\n<h2 id=\"Timestamp-in-name\"><a href=\"#Timestamp-in-name\" class=\"headerlink\" title=\"Timestamp in name\"></a>Timestamp in name</h2><p>$(date +%s)</p>\n<h2 id=\"What-does-etc-stand-for\"><a href=\"#What-does-etc-stand-for\" class=\"headerlink\" title=\"What does /etc stand for?\"></a>What does /etc stand for?</h2><p><a href=\"http://www.aboutlinux.info/2007/03/what-does-etc-stands-for-in-linuxunix.html\" target=\"_blank\" rel=\"external\">http://www.aboutlinux.info/2007/03/what-does-etc-stands-for-in-linuxunix.html</a></p>\n<h2 id=\"JSON-Pretty-print-curl-response\"><a href=\"#JSON-Pretty-print-curl-response\" class=\"headerlink\" title=\"JSON Pretty print curl response:\"></a>JSON Pretty print curl response:</h2><p>json_pp</p>\n<h2 id=\"PM2\"><a href=\"#PM2\" class=\"headerlink\" title=\"PM2\"></a>PM2</h2><p>pm2 start trafficcontroller.json –only s2</p>\n","site":{"data":{}},"excerpt":"","more":"<p>programming notes of the past weeks :  </p>\n<p>copy and paste pwd form command line:<br>pwd | pbcopy –&gt; to copy current dirctory to clipboard<br>then cd $(pbpaste) –&gt; to cd in different terminal</p>\n<h2 id=\"Copying-when-sshed-in\"><a href=\"#Copying-when-sshed-in\" class=\"headerlink\" title=\"Copying when sshed in\"></a>Copying when sshed in</h2><p>commandThatMakesOutput | ssh desktop pbcopy</p>\n<p>Source: <a href=\"http://stackoverflow.com/questions/1152362/getting-items-on-the-local-clipboard-from-a-remote-ssh-session\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/1152362/getting-items-on-the-local-clipboard-from-a-remote-ssh-session</a></p>\n<h2 id=\"scroll-up-in-terminal\"><a href=\"#scroll-up-in-terminal\" class=\"headerlink\" title=\"scroll up in terminal:\"></a>scroll up in terminal:</h2><p>shit + fn upkey (page up)</p>\n<h2 id=\"iTerm2-command-overlord\"><a href=\"#iTerm2-command-overlord\" class=\"headerlink\" title=\"iTerm2 command overlord\"></a>iTerm2 command overlord</h2><p>command + shift + i = send commmand to all terminal windows</p>\n<h2 id=\"Webstorm\"><a href=\"#Webstorm\" class=\"headerlink\" title=\"Webstorm\"></a>Webstorm</h2><p>command 1 = project view<br>command 2 = favorites<br>command 3 = search thingy<br>esc       = return to editor</p>\n<h2 id=\"Mongo-‘the-mongo-shell-speaks-js’\"><a href=\"#Mongo-‘the-mongo-shell-speaks-js’\" class=\"headerlink\" title=\"Mongo - ‘the mongo shell speaks js’\"></a>Mongo - ‘the mongo shell speaks js’</h2><p>db.quotes.find({‘drivers.lName’:’King’}, {‘policy.clutchQuoteType’:1})</p>\n<p>JSON.stringify</p>\n<p>decodeURIComponent(query that returns stringified stuff)</p>\n<h2 id=\"npm-test\"><a href=\"#npm-test\" class=\"headerlink\" title=\"npm test\"></a><code>npm test</code></h2><p>exit status 0 is added to the end of npm test calls</p>\n<p>Use <code>; exit 0</code> to replicate this for other npm scripts.</p>\n<p>source of info and link to code source: <a href=\"http://stackoverflow.com/questions/23286017/npm-error-elifecycle-while-running-the-test\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/23286017/npm-error-elifecycle-while-running-the-test</a></p>\n<h2 id=\"grep-files-with-regex\"><a href=\"#grep-files-with-regex\" class=\"headerlink\" title=\"grep files with regex\"></a><code>grep</code> files with regex</h2><p>grep -c -F /*<em><br>grep  ^\\ </em>function</p>\n<p>grep options<br>-c count<br>-F fixed string</p>\n<p>control-R to search command history!!</p>\n<h2 id=\"Broken-Fetch\"><a href=\"#Broken-Fetch\" class=\"headerlink\" title=\"Broken Fetch?\"></a>Broken Fetch?</h2><p>git config remote.origin.fetch “+refs/heads/<em>:refs/remotes/origin/</em>“</p>\n<h2 id=\"Running-in-background\"><a href=\"#Running-in-background\" class=\"headerlink\" title=\"Running in background\"></a>Running in background</h2><p>node server.js &gt;std.txt  2&gt;err.txt &amp;</p>\n<p>src: <a href=\"https://kb.iu.edu/d/afnz\" target=\"_blank\" rel=\"external\">https://kb.iu.edu/d/afnz</a></p>\n<h2 id=\"Timestamp-in-name\"><a href=\"#Timestamp-in-name\" class=\"headerlink\" title=\"Timestamp in name\"></a>Timestamp in name</h2><p>$(date +%s)</p>\n<h2 id=\"What-does-etc-stand-for\"><a href=\"#What-does-etc-stand-for\" class=\"headerlink\" title=\"What does /etc stand for?\"></a>What does /etc stand for?</h2><p><a href=\"http://www.aboutlinux.info/2007/03/what-does-etc-stands-for-in-linuxunix.html\" target=\"_blank\" rel=\"external\">http://www.aboutlinux.info/2007/03/what-does-etc-stands-for-in-linuxunix.html</a></p>\n<h2 id=\"JSON-Pretty-print-curl-response\"><a href=\"#JSON-Pretty-print-curl-response\" class=\"headerlink\" title=\"JSON Pretty print curl response:\"></a>JSON Pretty print curl response:</h2><p>json_pp</p>\n<h2 id=\"PM2\"><a href=\"#PM2\" class=\"headerlink\" title=\"PM2\"></a>PM2</h2><p>pm2 start trafficcontroller.json –only s2</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}